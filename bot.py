import logging
import os
import time
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from core.vgg_transfer import run_style_transfer
from core.gan_transfer import run_gan_transfer
from models.vgg_definitions import MODELS_VGG, get_vgg_config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–ø–æ–∫
CONTENT_DIR = 'images/content'
STYLE_DIR = 'images/style'
RESULT_DIR = 'images/result'
os.makedirs(CONTENT_DIR, exist_ok=True)
os.makedirs(STYLE_DIR, exist_ok=True)
os.makedirs(RESULT_DIR, exist_ok=True)

TOKEN = '7205161046:AAHTTtvI_5OIZIPLAdSNm5slNLzPaHKSS9E' # –í–ê–® –¢–û–ö–ï–ù
user_sessions = {}

# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ ---

def get_session(user_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user_id not in user_sessions:
        user_sessions[user_id] = {'content': None, 'style': None, 'model': None}
    return user_sessions[user_id]

def clear_session_files(user_id):
    """–û—á–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–∏, —Å–æ—Ö—Ä–∞–Ω—è—è –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å."""
    session = get_session(user_id)
    if session.get('content') and os.path.exists(session['content']):
        os.remove(session['content'])
        session['content'] = None
    if session.get('style') and os.path.exists(session['style']):
        os.remove(session['style'])
        session['style'] = None
    logger.info(f"–§–∞–π–ª—ã –¥–ª—è —Å–µ—Å—Å–∏–∏ {user_id} –æ—á–∏—â–µ–Ω—ã.")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏."""
    user_id = update.effective_user.id
    get_session(user_id) # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    clear_session_files(user_id) # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
    await context.bot.send_message(
        chat_id=user_id,
        text=f"üëã *–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!* –Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ç–≤–æ–∏ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞.",
        parse_mode='Markdown'
    )
    await ask_for_model(update, context)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é."""
    await update.message.reply_text(
        "‚ÑπÔ∏è *–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:*\n\n"
        "–Ø –º–æ–≥—É –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Å—Ç–∏–ª—å —Å –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω—ã –Ω–∞ –¥—Ä—É–≥—É—é, –∏—Å–ø–æ–ª—å–∑—É—è –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏. –í–æ—Ç –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n\n"
        "1Ô∏è‚É£ *–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å*:\n"
        "   - `üé® –°—Ç–∏–ª—å –ú–æ–Ω–µ (GAN)`: –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å. –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –ª—é–±–æ–µ –≤–∞—à–µ —Ñ–æ—Ç–æ –≤ –∫–∞—Ä—Ç–∏–Ω—É –≤ —Å—Ç–∏–ª–µ –ö–ª–æ–¥–∞ –ú–æ–Ω–µ. –¢—Ä–µ–±—É–µ—Ç *–≤—Å–µ–≥–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ*.\n"
        "   - `üñºÔ∏è VGG-–º–æ–¥–µ–ª–∏`: –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥. –¢—Ä–µ–±—É–µ—Ç *–¥–≤–∞ —Ñ–æ—Ç–æ*: –æ–¥–Ω–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—á—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–µ) –∏ –æ–¥–Ω–æ –¥–ª—è —Å—Ç–∏–ª—è (–∫–∞–∫ –±—É–¥–µ—Ç –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–æ). –†–∞–±–æ—Ç–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Å—Ç–∏–ª—å.\n\n"
        "2Ô∏è‚É£ *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ*:\n"
        "   - –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏.\n\n"
        "3Ô∏è‚É£ *–ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç*:\n"
        "   - –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —è –ø—Ä–∏—à–ª—é –≤–∞–º –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω—É –∏ –ø—Ä–µ–¥–ª–æ–∂—É —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å.\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é.\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É.",
        parse_mode='Markdown'
    )

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–æ–∫ ---

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏."""
    user_id = update.effective_user.id
    session = get_session(user_id)
    
    if not session.get('model'):
        await update.message.reply_text("ü§î –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ñ–æ—Ç–æ.", parse_mode='Markdown')
        await ask_for_model(update, context)
        return

    photo_file = await update.message.photo[-1].get_file()
    status_message = None

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è GAN –º–æ–¥–µ–ª–∏ (—Ç—Ä–µ–±—É–µ—Ç 1 —Ñ–æ—Ç–æ)
    if session['model'] == 'gan_monet':
        content_path = os.path.join(CONTENT_DIR, f'{user_id}_content.jpg')
        await photo_file.download_to_drive(content_path)
        session['content'] = content_path
        status_message = await update.message.reply_text("üé® –ü—Ä–∏–º–µ–Ω—è—é —Å—Ç–∏–ª—å –ú–æ–Ω–µ... –≠—Ç–æ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ!")
        await process_style_transfer(update, context, status_message)
    
    # –õ–æ–≥–∏–∫–∞ –¥–ª—è VGG –º–æ–¥–µ–ª–µ–π (—Ç—Ä–µ–±—É–µ—Ç 2 —Ñ–æ—Ç–æ)
    else:
        if session['content'] is None:
            content_path = os.path.join(CONTENT_DIR, f'{user_id}_content.jpg')
            await photo_file.download_to_drive(content_path)
            session['content'] = content_path
            await update.message.reply_text("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –≠—Ç–æ —Ñ–æ—Ç–æ –¥–ª—è *–∫–æ–Ω—Ç–µ–Ω—Ç–∞*. –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è *—Å—Ç–∏–ª—è*.", parse_mode='Markdown')
        elif session['style'] is None:
            style_path = os.path.join(STYLE_DIR, f'{user_id}_style.jpg')
            await photo_file.download_to_drive(style_path)
            session['style'] = style_path
            status_message = await update.message.reply_text("‚è≥ –ù–∞—á–∏–Ω–∞—é —Ç–≤–æ—Ä–∏—Ç—å –º–∞–≥–∏—é... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
            await process_style_transfer(update, context, status_message)

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞–ø—Ä–∞–≤–ª—è—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    await update.message.reply_text(
        "–Ø –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üñºÔ∏è\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
    )

async def ask_for_model(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏."""
    keyboard = [
        [InlineKeyboardButton("üé® –°—Ç–∏–ª—å –ú–æ–Ω–µ (–ë—ã—Å—Ç—Ä–æ, GAN)", callback_data="model_gan_monet")],
        [InlineKeyboardButton("üñºÔ∏è VGG-16 (–ë—ã—Å—Ç—Ä—ã–π)", callback_data="model_vgg16")],
        [InlineKeyboardButton("‚ú® VGG-19 (–î–µ—Ç–∞–ª—å–Ω—ã–π)", callback_data="model_vgg19")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message_text = 'üëá –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è:'
    
    # –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò–Ω–∞—á–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ.
    if update.callback_query:
        await update.callback_query.message.edit_text(message_text, reply_markup=reply_markup)
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id, text=message_text, reply_markup=reply_markup)

async def model_button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    
    session = get_session(user_id)
    clear_session_files(user_id) # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏
    
    model_choice = query.data.split('model_')[1]
    session['model'] = model_choice
    
    if model_choice == 'gan_monet':
        reply_text = "‚ú® *–°—Ç–∏–ª—å –ú–æ–Ω–µ (GAN)*\n\n–û—Ç–ª–∏—á–Ω–æ! –≠—Ç–∞ –º–æ–¥–µ–ª—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç –≤–∞—à–µ —Ñ–æ—Ç–æ –≤ —à–µ–¥–µ–≤—Ä –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é."
    else:
        model_config = get_vgg_config(model_choice)
        reply_text = f"‚ú® *{model_config['name']}*\n\n{model_config['description']}\n\n–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è **–∫–æ–Ω—Ç–µ–Ω—Ç–∞** (—á—Ç–æ –±—É–¥–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–µ)."
    
    await query.edit_message_text(text=reply_text, parse_mode='Markdown')

async def action_button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è."""
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    action = query.data.split('action_')[1]

    if action == 'try_another':
        await query.message.delete() # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        model_name = get_session(user_id).get('model')
        # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã, —á—Ç–æ–±—ã –±–æ—Ç —Å–Ω–æ–≤–∞ –∂–¥–∞–ª —Ñ–æ—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∏ —Å—Ç–∏–ª—è –¥–ª—è VGG)
        clear_session_files(user_id)
        if model_name == 'gan_monet':
            await context.bot.send_message(chat_id=user_id, text="–û—Ç–ª–∏—á–Ω–æ! üëç –ñ–¥—É —Å–ª–µ–¥—É—é—â—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–¥ –ú–æ–Ω–µ.")
        else:
            await context.bot.send_message(chat_id=user_id, text="–•–æ—Ä–æ—à–æ! üëç –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∞ –∑–∞—Ç–µ–º –¥–ª—è —Å—Ç–∏–ª—è.")
    
    elif action == 'change_model':
        await ask_for_model(update, context)

# --- –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å ---

async def process_style_transfer(update: Update, context: ContextTypes.DEFAULT_TYPE, status_message=None):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è, –∑–∞–º–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏."""
    user_id = update.effective_user.id
    session = get_session(user_id)
    result_path = os.path.join(RESULT_DIR, f'{user_id}_result_{int(time.time())}.jpg')
    model_name = session['model']

    start_time = time.time()
    try:
        # –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è
        if model_name == 'gan_monet':
            run_gan_transfer(content_img_path=session['content'], output_img_path=result_path)
            caption = "üéâ –ì–æ—Ç–æ–≤–æ! –í–∞—à —à–µ–¥–µ–≤—Ä –≤ —Å—Ç–∏–ª–µ –ú–æ–Ω–µ."
        else:
            model_config = get_vgg_config(model_name)
            run_style_transfer(model_config=model_config, content_img_path=session['content'], style_img_path=session['style'], output_img_path=result_path)
            caption = f"üéâ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç –º–æ–¥–µ–ª–∏ *{model_config['name']}*."
        
        duration_str = f"{time.time() - start_time:.1f} —Å–µ–∫."
        final_caption = f"{caption}\n\n‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {duration_str}"
        
        await context.bot.send_photo(chat_id=user_id, photo=open(result_path, 'rb'), caption=final_caption, parse_mode='Markdown')
        if status_message: await status_message.delete()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
        keyboard = [
            [InlineKeyboardButton("üñºÔ∏è –°—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ", callback_data="action_try_another")],
            [InlineKeyboardButton("‚öôÔ∏è –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="action_change_model")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=user_id, text="–ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?", reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ —Å—Ç–∏–ª—è –¥–ª—è user_id {user_id}: {e}")
        error_message = "üò• –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å –¥—Ä—É–≥–∏–º —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        if status_message: await status_message.edit_text(error_message)
        else: await context.bot.send_message(chat_id=user_id, text=error_message)
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –º–æ–¥–µ–ª—å –≤ —Å–µ—Å—Å–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è
        if os.path.exists(result_path): os.remove(result_path)
        clear_session_files(user_id)

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(TOKEN).build()

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler('start', start))
    app.add_handler(CommandHandler('help', help_command))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    app.add_handler(CallbackQueryHandler(model_button_callback, pattern='^model_'))
    app.add_handler(CallbackQueryHandler(action_button_callback, pattern='^action_'))

    app.run_polling()
    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == '__main__':
    main()