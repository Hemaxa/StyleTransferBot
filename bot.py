import logging
import os
import time
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –í–∞—à —Ñ–∞–π–ª —Å–æ –≤—Å–µ–π –ª–æ–≥–∏–∫–æ–π –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º.
from style_transfer import run_style_transfer, cnn, cnn_normalization_mean, cnn_normalization_std

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
CONTENT_DIR = 'images/content'
STYLE_DIR = 'images/style'
RESULT_DIR = 'images/result'

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(CONTENT_DIR, exist_ok=True)
os.makedirs(STYLE_DIR, exist_ok=True)
os.makedirs(RESULT_DIR, exist_ok=True)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: user_id -> {'content': path, 'style': path}
user_sessions = {}

# --- –í–ê–ñ–ù–û: –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather ---
TOKEN = '7205161046:AAHTTtvI_5OIZIPLAdSNm5slNLzPaHKSS9E' #

def get_session(user_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user_id not in user_sessions:
        user_sessions[user_id] = {'content': None, 'style': None}
    return user_sessions[user_id]

def clear_session(user_id):
    """–û—á–∏—â–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    session = get_session(user_id)
    if session['content'] and os.path.exists(session['content']):
        os.remove(session['content'])
    if session['style'] and os.path.exists(session['style']):
        os.remove(session['style'])
    user_sessions[user_id] = {'content': None, 'style': None}
    logger.info(f"–°–µ—Å—Å–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—á–∏—â–µ–Ω–∞.")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = update.effective_user.id
    clear_session(user_id)  # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é —Å–µ—Å—Å–∏—é –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å
    await update.message.reply_text(
        "üëã *–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Style Transfer –ë–æ—Ç* üé®\n\n"
        "–Ø –º–æ–≥—É –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤–∞—à–µ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç–∏–ª—å –¥—Ä—É–≥–æ–π –∫–∞—Ä—Ç–∏–Ω—ã.\n\n"
        "1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å (*–∫–æ–Ω—Ç–µ–Ω—Ç*).\n"
        "2Ô∏è‚É£ –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, —Å—Ç–∏–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å (*—Å—Ç–∏–ª—å*).\n\n"
        "–ù–∞—á–Ω–µ–º! –ñ–¥—É –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.",
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é."""
    await update.message.reply_text(
        "‚ÑπÔ∏è *–ö–∞–∫ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*\n\n"
        "1.  –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–æ–π (*—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –ø–µ–π–∑–∞–∂ –∏ —Ç.–¥.*).\n"
        "2.  –°—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–¥–∞—Å—Ç —Å—Ç–∏–ª—å (*–∫–∞—Ä—Ç–∏–Ω–∞, —É–∑–æ—Ä, —Ç–µ–∫—Å—Ç—É—Ä–∞*).\n\n"
        "ü§ñ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ —Ñ–æ—Ç–æ.\n\n"
        "–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /clear, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
        parse_mode='Markdown'
    )

async def clear_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear. –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é."""
    user_id = update.effective_user.id
    clear_session(user_id)
    await update.message.reply_text(
        "üóëÔ∏è –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ! –Ø —É–¥–∞–ª–∏–ª –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ. –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞."
    )

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏."""
    user_id = update.effective_user.id
    session = get_session(user_id)
    
    photo_file = await update.message.photo[-1].get_file()

    # –ï—Å–ª–∏ –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∫–æ–Ω—Ç–µ–Ω—Ç) –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    if session['content'] is None:
        content_path = os.path.join(CONTENT_DIR, f'{user_id}_content.jpg')
        await photo_file.download_to_drive(content_path)
        session['content'] = content_path
        await update.message.reply_text(
            "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –§–æ—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–æ.\n\n"
            "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤—Ç–æ—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –ø–µ—Ä–µ–Ω—è–ª –µ–≥–æ *—Å—Ç–∏–ª—å* üé®."
        )
    # –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Å—Ç–∏–ª—å) –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    elif session['style'] is None:
        style_path = os.path.join(STYLE_DIR, f'{user_id}_style.jpg')
        await photo_file.download_to_drive(style_path)
        session['style'] = style_path
        
        message = await update.message.reply_text(
            "‚ú® –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –û–±–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –º–µ—Å—Ç–µ.\n\n"
            "‚è≥ –ù–∞—á–∏–Ω–∞—é —Ç–≤–æ—Ä–∏—Ç—å –º–∞–≥–∏—é... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
        )
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–æ–ª–≥–∏–π –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è
        await process_style_transfer(update, context, message)

def format_duration(seconds):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–µ–∫—É–Ω–¥—ã –≤ –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã."""
    if seconds < 60:
        return f"{int(seconds)} —Å–µ–∫."
    else:
        mins = int(seconds // 60)
        secs = int(seconds % 60)
        return f"{mins} –º–∏–Ω. {secs} —Å–µ–∫."

async def process_style_transfer(update: Update, context: ContextTypes.DEFAULT_TYPE, status_message):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è, –∑–∞–º–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    user_id = update.effective_user.id
    session = get_session(user_id)
    result_path = os.path.join(RESULT_DIR, f'{user_id}_result.jpg')

    start_time = time.time()
    
    try:
        # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨ ---
        # –ú—ã –Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑—ã–≤–∞–µ–º –≤–∞—à—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å.
        # –≠—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ.
        run_style_transfer(
            cnn=cnn,
            normalization_mean=cnn_normalization_mean,
            normalization_std=cnn_normalization_std,
            content_img_path=session['content'],
            style_img_path=session['style'],
            output_img_path=result_path,
            num_steps=800,
            style_weight=50000,
            content_weight=1
        )
        
        end_time = time.time()
        duration = end_time - start_time
        duration_str = format_duration(duration)

        caption = f"üéâ –ì–æ—Ç–æ–≤–æ! –í–∞—à —à–µ–¥–µ–≤—Ä —Å–æ–∑–¥–∞–Ω.\n\n‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {duration_str}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
        await context.bot.send_photo(chat_id=user_id, photo=open(result_path, 'rb'), caption=caption)
        await status_message.delete()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è –¥–ª—è user_id {user_id}: {e}")
        await status_message.edit_text(
            "üò• –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å –¥—Ä—É–≥–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /clear –¥–ª—è —Å–±—Ä–æ—Å–∞."
        )
    finally:
        # –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        clear_session(user_id)


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    app = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler('start', start))
    app.add_handler(CommandHandler('help', help_command))
    app.add_handler(CommandHandler('clear', clear_command))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å —Å–µ—Ä–≤–µ—Ä–∞ Telegram
    app.run_polling()

if __name__ == '__main__':
    main()